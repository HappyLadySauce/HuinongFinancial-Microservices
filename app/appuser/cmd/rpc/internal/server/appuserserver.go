// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: appuser-rpc.proto

package server

import (
	"context"

	"rpc/appuser"
	"rpc/internal/logic"
	"rpc/internal/svc"
)

type AppUserServer struct {
	svcCtx *svc.ServiceContext
	appuser.UnimplementedAppUserServer
}

func NewAppUserServer(svcCtx *svc.ServiceContext) *AppUserServer {
	return &AppUserServer{
		svcCtx: svcCtx,
	}
}

// 用户认证相关
func (s *AppUserServer) GetUserByAccount(ctx context.Context, in *appuser.GetUserByAccountReq) (*appuser.AppUserInfo, error) {
	l := logic.NewGetUserByAccountLogic(ctx, s.svcCtx)
	return l.GetUserByAccount(in)
}

func (s *AppUserServer) VerifyUserPassword(ctx context.Context, in *appuser.VerifyUserPasswordReq) (*appuser.VerifyUserPasswordResp, error) {
	l := logic.NewVerifyUserPasswordLogic(ctx, s.svcCtx)
	return l.VerifyUserPassword(in)
}

func (s *AppUserServer) CreateUser(ctx context.Context, in *appuser.CreateUserReq) (*appuser.AppUserInfo, error) {
	l := logic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

// 用户信息管理
func (s *AppUserServer) GetUserInfo(ctx context.Context, in *appuser.GetUserInfoReq) (*appuser.AppUserInfo, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *AppUserServer) UpdateUserProfile(ctx context.Context, in *appuser.UpdateUserProfileReq) (*appuser.AppUserInfo, error) {
	l := logic.NewUpdateUserProfileLogic(ctx, s.svcCtx)
	return l.UpdateUserProfile(in)
}

func (s *AppUserServer) GetUserList(ctx context.Context, in *appuser.GetUserListReq) (*appuser.GetUserListResp, error) {
	l := logic.NewGetUserListLogic(ctx, s.svcCtx)
	return l.GetUserList(in)
}

func (s *AppUserServer) UpdateUserStatus(ctx context.Context, in *appuser.UpdateUserStatusReq) (*appuser.AppUserInfo, error) {
	l := logic.NewUpdateUserStatusLogic(ctx, s.svcCtx)
	return l.UpdateUserStatus(in)
}
