// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: appuser-rpc.proto

package appuserclient

import (
	"context"

	"rpc/appuser"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AppUserInfo            = appuser.AppUserInfo
	CreateUserReq          = appuser.CreateUserReq
	GetUserByAccountReq    = appuser.GetUserByAccountReq
	GetUserInfoReq         = appuser.GetUserInfoReq
	GetUserListReq         = appuser.GetUserListReq
	GetUserListResp        = appuser.GetUserListResp
	UpdateUserProfileReq   = appuser.UpdateUserProfileReq
	UpdateUserStatusReq    = appuser.UpdateUserStatusReq
	VerifyUserPasswordReq  = appuser.VerifyUserPasswordReq
	VerifyUserPasswordResp = appuser.VerifyUserPasswordResp

	AppUser interface {
		// 用户认证相关
		GetUserByAccount(ctx context.Context, in *GetUserByAccountReq, opts ...grpc.CallOption) (*AppUserInfo, error)
		VerifyUserPassword(ctx context.Context, in *VerifyUserPasswordReq, opts ...grpc.CallOption) (*VerifyUserPasswordResp, error)
		CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*AppUserInfo, error)
		// 用户信息管理
		GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*AppUserInfo, error)
		UpdateUserProfile(ctx context.Context, in *UpdateUserProfileReq, opts ...grpc.CallOption) (*AppUserInfo, error)
		GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error)
		UpdateUserStatus(ctx context.Context, in *UpdateUserStatusReq, opts ...grpc.CallOption) (*AppUserInfo, error)
	}

	defaultAppUser struct {
		cli zrpc.Client
	}
)

func NewAppUser(cli zrpc.Client) AppUser {
	return &defaultAppUser{
		cli: cli,
	}
}

// 用户认证相关
func (m *defaultAppUser) GetUserByAccount(ctx context.Context, in *GetUserByAccountReq, opts ...grpc.CallOption) (*AppUserInfo, error) {
	client := appuser.NewAppUserClient(m.cli.Conn())
	return client.GetUserByAccount(ctx, in, opts...)
}

func (m *defaultAppUser) VerifyUserPassword(ctx context.Context, in *VerifyUserPasswordReq, opts ...grpc.CallOption) (*VerifyUserPasswordResp, error) {
	client := appuser.NewAppUserClient(m.cli.Conn())
	return client.VerifyUserPassword(ctx, in, opts...)
}

func (m *defaultAppUser) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*AppUserInfo, error) {
	client := appuser.NewAppUserClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}

// 用户信息管理
func (m *defaultAppUser) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*AppUserInfo, error) {
	client := appuser.NewAppUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultAppUser) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileReq, opts ...grpc.CallOption) (*AppUserInfo, error) {
	client := appuser.NewAppUserClient(m.cli.Conn())
	return client.UpdateUserProfile(ctx, in, opts...)
}

func (m *defaultAppUser) GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error) {
	client := appuser.NewAppUserClient(m.cli.Conn())
	return client.GetUserList(ctx, in, opts...)
}

func (m *defaultAppUser) UpdateUserStatus(ctx context.Context, in *UpdateUserStatusReq, opts ...grpc.CallOption) (*AppUserInfo, error) {
	client := appuser.NewAppUserClient(m.cli.Conn())
	return client.UpdateUserStatus(ctx, in, opts...)
}
