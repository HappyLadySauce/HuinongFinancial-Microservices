info (
	title:   "C端用户服务API"
	desc:    "提供C端用户的基本信息管理功能"
	author:  "Huinong"
	email:   "dev@huinong.com"
	version: "v1.0.0"
)

// 服务架构:
// 用户 -> 前端 -> nginx网关 -> appuser-api -> appuser.rpc -> redis 缓存用户信息 -> 数据库 appuser (MySQL)
//                                                        -> other.rpc -> redis 缓存用户信息 -> 数据库 other (MySQL)
// API 服务端口:10001
// 无数据库、无缓存 直接调用rpc服务实现

// consul 调用地址:consul.huinong.internal
// rpc 端口:20001
// rpc 服务名:appuser.rpc

// 服务职责(调用rpc服务实现):
// 1. 用户信息管理:用户信息查询、用户信息修改、用户注销
// 2. 用户认证管理:用户登录管理、用户注册管理、用户注销管理、用户密码修改

// -- ----------------------------
// App用户表
// -- ----------------------------
// DROP TABLE IF EXISTS `app_users`;
// CREATE TABLE `app_users` (
//   `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '用户ID',
//   `phone` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '手机号',
//   `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '密码哈希',
//   `name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户姓名',
//   `nickname` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT '昵称',
//   `age` tinyint UNSIGNED DEFAULT 0 COMMENT '年龄',
//   `gender` tinyint UNSIGNED DEFAULT 0 COMMENT '性别 0:未知 1:男 2:女',
//   `occupation` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT '职业',
//   `address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT '联系地址',
//   `income` decimal(10,2) DEFAULT 0.00 COMMENT '月收入',
//   `status` tinyint UNSIGNED DEFAULT 1 COMMENT '状态 1:正常 2:冻结 3:禁用',
//   `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
//   `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
//   PRIMARY KEY (`id`),
//   UNIQUE KEY `uk_phone` (`phone`),
//   KEY `idx_status` (`status`),
//   KEY `idx_created_at` (`created_at`)
// ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='App用户表';
// 数据结构定义
type UserInfo {
	Id         int64   `json:"id"`
	Phone      string  `json:"phone"`
	Name       string  `json:"name"`
	Nickname   string  `json:"nickname"`
	Age        int     `json:"age"`
	Gender     int     `json:"gender"`
	Occupation string  `json:"occupation"`
	Address    string  `json:"address"`
	Income     float64 `json:"income"`
	Status     int     `json:"status"`
	CreatedAt  int64   `json:"created_at"`
	UpdatedAt  int64   `json:"updated_at"`
}

// 获取用户信息请求响应
type GetUserInfoReq {
	Phone string `json:"phone"`
}

type GetUserInfoResp {
	Code     int32    `json:"code"`
	Message  string   `json:"message"`
	UserInfo UserInfo `json:"user_info"`
}

// 更新用户信息请求响应
type UpdateUserInfoReq {
	UserInfo UserInfo `json:"user_info"`
}

type UpdateUserInfoResp {
	Code     int32    `json:"code"`
	Message  string   `json:"message"`
	UserInfo UserInfo `json:"user_info"`
}

// 删除用户请求响应
type DeleteUserReq {
	Phone string `json:"phone"`
}

type DeleteUserResp {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// 登录请求响应
type LoginReq {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

type LoginResp {
	Code    int32  `json:"code"`
	Message string `json:"message"`
	Token   string `json:"token"`
}

// 注册请求响应
type RegisterReq {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

type RegisterResp {
	Code    int32  `json:"code"`
	Message string `json:"message"`
	Token   string `json:"token"`
}

// 注销请求响应
type LogoutReq {
	Token string `json:"token"`
}

type LogoutResp {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// 修改密码请求响应
type ChangePasswordReq {
	Phone       string `json:"phone"`
	OldPassword string `json:"old_password"`
	NewPassword string `json:"new_password"`
}

type ChangePasswordResp {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// 用户认证管理 (公开接口)
@server (
	group:  auth
	prefix: /api/v1/auth
)
service appuser {
	// 用户登录
	@handler Login
	post /login (LoginReq) returns (LoginResp)

	// 用户注册
	@handler Register
	post /register (RegisterReq) returns (RegisterResp)
}

// 用户信息管理 (需要JWT认证)
@server (
	group:  info
	jwt:    Auth
	prefix: /api/v1/user
)
service appuser {
	// 获取用户信息
	@handler GetUserByPhone
	get /info (GetUserInfoReq) returns (GetUserInfoResp)

	// 更新用户信息
	@handler UpdateUserInfo
	put /info (UpdateUserInfoReq) returns (UpdateUserInfoResp)

	// 注销用户
	@handler DeleteUser
	post /delete (DeleteUserReq) returns (DeleteUserResp)
}

// 用户认证管理 (需要JWT认证)
@server (
	group:  auth_jwt
	jwt:    Auth
	prefix: /api/v1/auth
)
service appuser {
	// 用户注销
	@handler Logout
	post /logout (LogoutReq) returns (LogoutResp)

	// 用户密码修改
	@handler ChangePassword
	post /password (ChangePasswordReq) returns (ChangePasswordResp)
}

