syntax = "v1"

info (
	title:   "贷款业务API"
	desc:    "提供贷款申请、审批等相关功能"
	author:  "Huinong"
	email:   "dev@huinong.com"
	version: "v1.0.0"
)

// 服务架构:
// 用户 -> 前端 -> nginx网关 -> loan-api -> loan.rpc -> redis 缓存贷款信息 -> 数据库 loan (MySQL)
//                                                   -> loanproduct.rpc -> redis 缓存产品信息 -> 数据库 loanproduct (MySQL)
//                                                   -> appuser.rpc -> redis 缓存用户信息 -> 数据库 appuser (MySQL)
// API 服务端口:10003
// 无数据库、无缓存 直接调用rpc服务实现
// consul 调用地址:consul.huinong.internal
// rpc 端口:20003
// rpc 服务名:loan.rpc
// 服务职责(调用rpc服务实现):
// 1. 贷款申请管理:贷款申请创建、查询、修改、撤销
// 2. 贷款审批管理:申请审批、审批记录查询
// -- ----------------------------
// 贷款申请表
// -- ----------------------------
// DROP TABLE IF EXISTS `loan_applications`;
// CREATE TABLE `loan_applications` (
//   `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '申请ID',
//   `application_id` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '申请编号',
//   `user_id` bigint UNSIGNED NOT NULL COMMENT '用户ID',
//   `applicant_name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '申请人姓名',
//   `product_id` bigint UNSIGNED NOT NULL COMMENT '贷款产品ID',
//   `name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '申请名称',
//   `type` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '贷款类型',
//   `amount` decimal(15,2) NOT NULL COMMENT '申请金额',
//   `duration` int UNSIGNED NOT NULL COMMENT '贷款期限(月)',
//   `purpose` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT '贷款用途',
//   `status` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT 'pending' COMMENT '状态 pending/approved/rejected/cancelled',
//   `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
//   `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
//   PRIMARY KEY (`id`),
//   UNIQUE KEY `uk_application_id` (`application_id`),
//   KEY `idx_user_id` (`user_id`),
//   KEY `idx_product_id` (`product_id`),
//   KEY `idx_status` (`status`)
// ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='贷款申请表';
// 数据结构定义
type LoanApplicationInfo {
	Id            int64   `json:"id"`
	ApplicationId string  `json:"application_id"`
	UserId        int64   `json:"user_id"`
	ApplicantName string  `json:"applicant_name"`
	ProductId     int64   `json:"product_id"`
	Name          string  `json:"name"`
	Type          string  `json:"type"`
	Amount        float64 `json:"amount"`
	Duration      int32   `json:"duration"`
	Purpose       string  `json:"purpose"`
	Status        string  `json:"status"`
	CreatedAt     int64   `json:"created_at"`
	UpdatedAt     int64   `json:"updated_at"`
}

// 创建贷款申请请求响应
type CreateLoanApplicationReq {
	ProductId int64   `json:"product_id"`
	Name      string  `json:"name"`
	Type      string  `json:"type"`
	Amount    float64 `json:"amount"`
	Duration  int32   `json:"duration"`
	Purpose   string  `json:"purpose"`
}

type CreateLoanApplicationResp {
	ApplicationId string `json:"application_id"`
}

// 获取贷款申请请求响应
type GetLoanApplicationReq {
	ApplicationId string `json:"application_id"`
}

type GetLoanApplicationResp {	
	ApplicationInfo LoanApplicationInfo `json:"application_info"`
}

// 获取贷款申请列表请求响应
type ListLoanApplicationsReq {
	Page   int32  `form:"page,default=1"` // 修改为int32统一分页参数
	Size   int32  `form:"size,default=10"` // 修改为int32统一分页参数
	UserId int64  `form:"user_id,optional"`
	Status string `form:"status,optional"`
}

type ListLoanApplicationsResp {
	List    []LoanApplicationInfo `json:"list"`
	Total   int64                 `json:"total"`
}

// 更新贷款申请请求响应
type UpdateLoanApplicationReq {
	ApplicationId string  `path:"id"`
	Amount        float64 `json:"amount"`
	Duration      int32   `json:"duration"`
	Purpose       string  `json:"purpose"`
}

type UpdateLoanApplicationResp {
	ApplicationInfo LoanApplicationInfo `json:"application_info"`
}

// 撤销贷款申请请求响应
type CancelLoanApplicationReq {
	ApplicationId string `path:"id"`
	Reason        string `json:"reason"`
}

type CancelLoanApplicationResp {
}

// 审批贷款申请请求响应
type ApproveLoanApplicationReq {
	ApplicationId    string  `path:"id"`
	Action           string  `json:"action"`
	Suggestions      string  `json:"suggestions"`
	ApprovedAmount   float64 `json:"approved_amount"`
	ApprovedDuration int32   `json:"approved_duration"`
	InterestRate     float64 `json:"interest_rate"`
}

type ApproveLoanApplicationResp {
}

// 审批记录信息
type LoanApprovalInfo {
	Id               int64   `json:"id"`
	ApplicationId    int64   `json:"application_id"`
	AuditorId        int64   `json:"auditor_id"`
	AuditorName      string  `json:"auditor_name"`
	Action           string  `json:"action"`
	Suggestions      string  `json:"suggestions"`
	ApprovedAmount   float64 `json:"approved_amount"`
	ApprovedDuration int32   `json:"approved_duration"`
	InterestRate     float64 `json:"interest_rate"`
	CreatedAt        int64   `json:"created_at"`
}

// 获取审批记录请求响应
type ListLoanApprovalsReq {
	ApplicationId string `form:"application_id"`
}

type ListLoanApprovalsResp {
	List    []LoanApprovalInfo `json:"list"`
}

// C端用户贷款申请管理 (需要JWT认证)
@server (
	group:  loan
	jwt:    Auth
	prefix: /api/v1/loan
)
service loan {
	// 创建贷款申请
	@handler CreateLoanApplication
	post /applications (CreateLoanApplicationReq) returns (CreateLoanApplicationResp)

	// 获取我的贷款申请详情
	@handler GetMyLoanApplication
	get /applications/:id returns (GetLoanApplicationResp)

	// 更新我的贷款申请
	@handler UpdateMyLoanApplication
	put /applications/:id (UpdateLoanApplicationReq) returns (UpdateLoanApplicationResp)

	// 撤销我的贷款申请
	@handler CancelMyLoanApplication
	post /applications/:id/cancel (CancelLoanApplicationReq) returns (CancelLoanApplicationResp)

	// 获取我的贷款申请列表
	@handler ListMyLoanApplications
	get /applications (ListLoanApplicationsReq) returns (ListLoanApplicationsResp)
}

// B端管理员贷款管理 (需要JWT认证和管理员权限)
@server (
	group:      admin
	jwt:        Auth
	middleware: AdminAuth
	prefix:     /api/v1/admin/loan
)
service loan {
	// 获取所有贷款申请列表
	@handler ListAllLoanApplications
	get /applications (ListLoanApplicationsReq) returns (ListLoanApplicationsResp)

	// 获取贷款申请详情
	@handler GetLoanApplicationDetail
	get /applications/:id returns (GetLoanApplicationResp)

	// 审批贷款申请
	@handler ApproveLoanApplication
	post /applications/:id/approve (ApproveLoanApplicationReq) returns (ApproveLoanApplicationResp)

	// 获取申请审批记录
	@handler ListLoanApprovals
	get /applications/:id/approvals (ListLoanApprovalsReq) returns (ListLoanApprovalsResp)
}

// goctl api go -api *.api -dir ../  -style=goZero
