// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: loanproduct-rpc.proto

package server

import (
	"context"

	"loanproductrpc/internal/logic"
	"loanproductrpc/internal/svc"
	"loanproductrpc/loanproduct"
)

type LoanProductServiceServer struct {
	svcCtx *svc.ServiceContext
	loanproduct.UnimplementedLoanProductServiceServer
}

func NewLoanProductServiceServer(svcCtx *svc.ServiceContext) *LoanProductServiceServer {
	return &LoanProductServiceServer{
		svcCtx: svcCtx,
	}
}

// 产品查询
func (s *LoanProductServiceServer) GetLoanProduct(ctx context.Context, in *loanproduct.GetLoanProductReq) (*loanproduct.GetLoanProductResp, error) {
	l := logic.NewGetLoanProductLogic(ctx, s.svcCtx)
	return l.GetLoanProduct(in)
}

func (s *LoanProductServiceServer) ListLoanProducts(ctx context.Context, in *loanproduct.ListLoanProductsReq) (*loanproduct.ListLoanProductsResp, error) {
	l := logic.NewListLoanProductsLogic(ctx, s.svcCtx)
	return l.ListLoanProducts(in)
}

// 产品管理
func (s *LoanProductServiceServer) CreateLoanProduct(ctx context.Context, in *loanproduct.CreateLoanProductReq) (*loanproduct.CreateLoanProductResp, error) {
	l := logic.NewCreateLoanProductLogic(ctx, s.svcCtx)
	return l.CreateLoanProduct(in)
}

func (s *LoanProductServiceServer) UpdateLoanProduct(ctx context.Context, in *loanproduct.UpdateLoanProductReq) (*loanproduct.UpdateLoanProductResp, error) {
	l := logic.NewUpdateLoanProductLogic(ctx, s.svcCtx)
	return l.UpdateLoanProduct(in)
}

func (s *LoanProductServiceServer) DeleteLoanProduct(ctx context.Context, in *loanproduct.DeleteLoanProductReq) (*loanproduct.DeleteLoanProductResp, error) {
	l := logic.NewDeleteLoanProductLogic(ctx, s.svcCtx)
	return l.DeleteLoanProduct(in)
}

func (s *LoanProductServiceServer) UpdateProductStatus(ctx context.Context, in *loanproduct.UpdateProductStatusReq) (*loanproduct.UpdateProductStatusResp, error) {
	l := logic.NewUpdateProductStatusLogic(ctx, s.svcCtx)
	return l.UpdateProductStatus(in)
}
