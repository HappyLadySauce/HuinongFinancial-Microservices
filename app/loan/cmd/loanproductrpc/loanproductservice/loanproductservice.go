// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: loanproduct-rpc.proto

package loanproductservice

import (
	"context"

	"loanproductrpc/loanproduct"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateLoanProductReq    = loanproduct.CreateLoanProductReq
	CreateLoanProductResp   = loanproduct.CreateLoanProductResp
	DeleteLoanProductReq    = loanproduct.DeleteLoanProductReq
	DeleteLoanProductResp   = loanproduct.DeleteLoanProductResp
	GetLoanProductReq       = loanproduct.GetLoanProductReq
	GetLoanProductResp      = loanproduct.GetLoanProductResp
	ListLoanProductsReq     = loanproduct.ListLoanProductsReq
	ListLoanProductsResp    = loanproduct.ListLoanProductsResp
	LoanProductInfo         = loanproduct.LoanProductInfo
	UpdateLoanProductReq    = loanproduct.UpdateLoanProductReq
	UpdateLoanProductResp   = loanproduct.UpdateLoanProductResp
	UpdateProductStatusReq  = loanproduct.UpdateProductStatusReq
	UpdateProductStatusResp = loanproduct.UpdateProductStatusResp

	LoanProductService interface {
		// 产品查询
		GetLoanProduct(ctx context.Context, in *GetLoanProductReq, opts ...grpc.CallOption) (*GetLoanProductResp, error)
		ListLoanProducts(ctx context.Context, in *ListLoanProductsReq, opts ...grpc.CallOption) (*ListLoanProductsResp, error)
		// 产品管理
		CreateLoanProduct(ctx context.Context, in *CreateLoanProductReq, opts ...grpc.CallOption) (*CreateLoanProductResp, error)
		UpdateLoanProduct(ctx context.Context, in *UpdateLoanProductReq, opts ...grpc.CallOption) (*UpdateLoanProductResp, error)
		DeleteLoanProduct(ctx context.Context, in *DeleteLoanProductReq, opts ...grpc.CallOption) (*DeleteLoanProductResp, error)
		UpdateProductStatus(ctx context.Context, in *UpdateProductStatusReq, opts ...grpc.CallOption) (*UpdateProductStatusResp, error)
	}

	defaultLoanProductService struct {
		cli zrpc.Client
	}
)

func NewLoanProductService(cli zrpc.Client) LoanProductService {
	return &defaultLoanProductService{
		cli: cli,
	}
}

// 产品查询
func (m *defaultLoanProductService) GetLoanProduct(ctx context.Context, in *GetLoanProductReq, opts ...grpc.CallOption) (*GetLoanProductResp, error) {
	client := loanproduct.NewLoanProductServiceClient(m.cli.Conn())
	return client.GetLoanProduct(ctx, in, opts...)
}

func (m *defaultLoanProductService) ListLoanProducts(ctx context.Context, in *ListLoanProductsReq, opts ...grpc.CallOption) (*ListLoanProductsResp, error) {
	client := loanproduct.NewLoanProductServiceClient(m.cli.Conn())
	return client.ListLoanProducts(ctx, in, opts...)
}

// 产品管理
func (m *defaultLoanProductService) CreateLoanProduct(ctx context.Context, in *CreateLoanProductReq, opts ...grpc.CallOption) (*CreateLoanProductResp, error) {
	client := loanproduct.NewLoanProductServiceClient(m.cli.Conn())
	return client.CreateLoanProduct(ctx, in, opts...)
}

func (m *defaultLoanProductService) UpdateLoanProduct(ctx context.Context, in *UpdateLoanProductReq, opts ...grpc.CallOption) (*UpdateLoanProductResp, error) {
	client := loanproduct.NewLoanProductServiceClient(m.cli.Conn())
	return client.UpdateLoanProduct(ctx, in, opts...)
}

func (m *defaultLoanProductService) DeleteLoanProduct(ctx context.Context, in *DeleteLoanProductReq, opts ...grpc.CallOption) (*DeleteLoanProductResp, error) {
	client := loanproduct.NewLoanProductServiceClient(m.cli.Conn())
	return client.DeleteLoanProduct(ctx, in, opts...)
}

func (m *defaultLoanProductService) UpdateProductStatus(ctx context.Context, in *UpdateProductStatusReq, opts ...grpc.CallOption) (*UpdateProductStatusResp, error) {
	client := loanproduct.NewLoanProductServiceClient(m.cli.Conn())
	return client.UpdateProductStatus(ctx, in, opts...)
}
