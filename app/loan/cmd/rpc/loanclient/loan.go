// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: loan-rpc.proto

package loanclient

import (
	"context"

	"rpc/loan"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ApproveLoanApplicationReq  = loan.ApproveLoanApplicationReq
	ApproveLoanApplicationResp = loan.ApproveLoanApplicationResp
	CancelLoanApplicationReq   = loan.CancelLoanApplicationReq
	CancelLoanApplicationResp  = loan.CancelLoanApplicationResp
	CreateLoanApplicationReq   = loan.CreateLoanApplicationReq
	CreateLoanApplicationResp  = loan.CreateLoanApplicationResp
	GetLoanApplicationReq      = loan.GetLoanApplicationReq
	GetLoanApplicationResp     = loan.GetLoanApplicationResp
	ListLoanApplicationsReq    = loan.ListLoanApplicationsReq
	ListLoanApplicationsResp   = loan.ListLoanApplicationsResp
	ListLoanApprovalsReq       = loan.ListLoanApprovalsReq
	ListLoanApprovalsResp      = loan.ListLoanApprovalsResp
	LoanApplicationInfo        = loan.LoanApplicationInfo
	LoanApprovalInfo           = loan.LoanApprovalInfo
	UpdateLoanApplicationReq   = loan.UpdateLoanApplicationReq
	UpdateLoanApplicationResp  = loan.UpdateLoanApplicationResp

	Loan interface {
		// 贷款申请管理
		CreateLoanApplication(ctx context.Context, in *CreateLoanApplicationReq, opts ...grpc.CallOption) (*CreateLoanApplicationResp, error)
		GetLoanApplication(ctx context.Context, in *GetLoanApplicationReq, opts ...grpc.CallOption) (*GetLoanApplicationResp, error)
		ListLoanApplications(ctx context.Context, in *ListLoanApplicationsReq, opts ...grpc.CallOption) (*ListLoanApplicationsResp, error)
		UpdateLoanApplication(ctx context.Context, in *UpdateLoanApplicationReq, opts ...grpc.CallOption) (*UpdateLoanApplicationResp, error)
		CancelLoanApplication(ctx context.Context, in *CancelLoanApplicationReq, opts ...grpc.CallOption) (*CancelLoanApplicationResp, error)
		// 贷款审批管理
		ApproveLoanApplication(ctx context.Context, in *ApproveLoanApplicationReq, opts ...grpc.CallOption) (*ApproveLoanApplicationResp, error)
		ListLoanApprovals(ctx context.Context, in *ListLoanApprovalsReq, opts ...grpc.CallOption) (*ListLoanApprovalsResp, error)
	}

	defaultLoan struct {
		cli zrpc.Client
	}
)

func NewLoan(cli zrpc.Client) Loan {
	return &defaultLoan{
		cli: cli,
	}
}

// 贷款申请管理
func (m *defaultLoan) CreateLoanApplication(ctx context.Context, in *CreateLoanApplicationReq, opts ...grpc.CallOption) (*CreateLoanApplicationResp, error) {
	client := loan.NewLoanClient(m.cli.Conn())
	return client.CreateLoanApplication(ctx, in, opts...)
}

func (m *defaultLoan) GetLoanApplication(ctx context.Context, in *GetLoanApplicationReq, opts ...grpc.CallOption) (*GetLoanApplicationResp, error) {
	client := loan.NewLoanClient(m.cli.Conn())
	return client.GetLoanApplication(ctx, in, opts...)
}

func (m *defaultLoan) ListLoanApplications(ctx context.Context, in *ListLoanApplicationsReq, opts ...grpc.CallOption) (*ListLoanApplicationsResp, error) {
	client := loan.NewLoanClient(m.cli.Conn())
	return client.ListLoanApplications(ctx, in, opts...)
}

func (m *defaultLoan) UpdateLoanApplication(ctx context.Context, in *UpdateLoanApplicationReq, opts ...grpc.CallOption) (*UpdateLoanApplicationResp, error) {
	client := loan.NewLoanClient(m.cli.Conn())
	return client.UpdateLoanApplication(ctx, in, opts...)
}

func (m *defaultLoan) CancelLoanApplication(ctx context.Context, in *CancelLoanApplicationReq, opts ...grpc.CallOption) (*CancelLoanApplicationResp, error) {
	client := loan.NewLoanClient(m.cli.Conn())
	return client.CancelLoanApplication(ctx, in, opts...)
}

// 贷款审批管理
func (m *defaultLoan) ApproveLoanApplication(ctx context.Context, in *ApproveLoanApplicationReq, opts ...grpc.CallOption) (*ApproveLoanApplicationResp, error) {
	client := loan.NewLoanClient(m.cli.Conn())
	return client.ApproveLoanApplication(ctx, in, opts...)
}

func (m *defaultLoan) ListLoanApprovals(ctx context.Context, in *ListLoanApprovalsReq, opts ...grpc.CallOption) (*ListLoanApprovalsResp, error) {
	client := loan.NewLoanClient(m.cli.Conn())
	return client.ListLoanApprovals(ctx, in, opts...)
}
