// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: loan-rpc.proto

package server

import (
	"context"

	"rpc/internal/logic"
	"rpc/internal/svc"
	"rpc/loan"
)

type LoanServer struct {
	svcCtx *svc.ServiceContext
	loan.UnimplementedLoanServer
}

func NewLoanServer(svcCtx *svc.ServiceContext) *LoanServer {
	return &LoanServer{
		svcCtx: svcCtx,
	}
}

// 贷款申请管理
func (s *LoanServer) CreateLoanApplication(ctx context.Context, in *loan.CreateLoanApplicationReq) (*loan.CreateLoanApplicationResp, error) {
	l := logic.NewCreateLoanApplicationLogic(ctx, s.svcCtx)
	return l.CreateLoanApplication(in)
}

func (s *LoanServer) GetLoanApplication(ctx context.Context, in *loan.GetLoanApplicationReq) (*loan.GetLoanApplicationResp, error) {
	l := logic.NewGetLoanApplicationLogic(ctx, s.svcCtx)
	return l.GetLoanApplication(in)
}

func (s *LoanServer) ListLoanApplications(ctx context.Context, in *loan.ListLoanApplicationsReq) (*loan.ListLoanApplicationsResp, error) {
	l := logic.NewListLoanApplicationsLogic(ctx, s.svcCtx)
	return l.ListLoanApplications(in)
}

func (s *LoanServer) UpdateLoanApplication(ctx context.Context, in *loan.UpdateLoanApplicationReq) (*loan.UpdateLoanApplicationResp, error) {
	l := logic.NewUpdateLoanApplicationLogic(ctx, s.svcCtx)
	return l.UpdateLoanApplication(in)
}

func (s *LoanServer) CancelLoanApplication(ctx context.Context, in *loan.CancelLoanApplicationReq) (*loan.CancelLoanApplicationResp, error) {
	l := logic.NewCancelLoanApplicationLogic(ctx, s.svcCtx)
	return l.CancelLoanApplication(in)
}

// 贷款审批管理
func (s *LoanServer) ApproveLoanApplication(ctx context.Context, in *loan.ApproveLoanApplicationReq) (*loan.ApproveLoanApplicationResp, error) {
	l := logic.NewApproveLoanApplicationLogic(ctx, s.svcCtx)
	return l.ApproveLoanApplication(in)
}

func (s *LoanServer) ListLoanApprovals(ctx context.Context, in *loan.ListLoanApprovalsReq) (*loan.ListLoanApprovalsResp, error) {
	l := logic.NewListLoanApprovalsLogic(ctx, s.svcCtx)
	return l.ListLoanApprovals(in)
}
