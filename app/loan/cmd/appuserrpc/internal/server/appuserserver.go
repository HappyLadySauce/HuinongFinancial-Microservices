// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: appuser-rpc.proto

package server

import (
	"context"

	"appuserrpc/appuser"
	"appuserrpc/internal/logic"
	"appuserrpc/internal/svc"
)

type AppUserServer struct {
	svcCtx *svc.ServiceContext
	appuser.UnimplementedAppUserServer
}

func NewAppUserServer(svcCtx *svc.ServiceContext) *AppUserServer {
	return &AppUserServer{
		svcCtx: svcCtx,
	}
}

// 用户信息管理
func (s *AppUserServer) GetUserByPhone(ctx context.Context, in *appuser.GetUserInfoReq) (*appuser.GetUserInfoResp, error) {
	l := logic.NewGetUserByPhoneLogic(ctx, s.svcCtx)
	return l.GetUserByPhone(in)
}

func (s *AppUserServer) GetUserById(ctx context.Context, in *appuser.GetUserByIdReq) (*appuser.GetUserInfoResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *AppUserServer) UpdateUserInfo(ctx context.Context, in *appuser.UpdateUserInfoReq) (*appuser.UpdateUserInfoResp, error) {
	l := logic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

func (s *AppUserServer) DeleteUser(ctx context.Context, in *appuser.DeleteUserReq) (*appuser.DeleteUserResp, error) {
	l := logic.NewDeleteUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(in)
}

// 用户认证管理
func (s *AppUserServer) Login(ctx context.Context, in *appuser.LoginReq) (*appuser.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *AppUserServer) Register(ctx context.Context, in *appuser.RegisterReq) (*appuser.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *AppUserServer) Logout(ctx context.Context, in *appuser.LogoutReq) (*appuser.LogoutResp, error) {
	l := logic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

func (s *AppUserServer) ChangePassword(ctx context.Context, in *appuser.ChangePasswordReq) (*appuser.ChangePasswordResp, error) {
	l := logic.NewChangePasswordLogic(ctx, s.svcCtx)
	return l.ChangePassword(in)
}
