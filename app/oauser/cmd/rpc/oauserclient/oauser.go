// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: oauser-rpc.proto

package oauserclient

import (
	"context"

	"rpc/oauser"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateOAUserReq        = oauser.CreateOAUserReq
	GetOAUserByUsernameReq = oauser.GetOAUserByUsernameReq
	GetOAUserListReq       = oauser.GetOAUserListReq
	GetOAUserListResp      = oauser.GetOAUserListResp
	OAUserInfo             = oauser.OAUserInfo
	UpdateOAUserReq        = oauser.UpdateOAUserReq
	VerifyOAPasswordReq    = oauser.VerifyOAPasswordReq
	VerifyOAPasswordResp   = oauser.VerifyOAPasswordResp

	OAUser interface {
		// --- 认证(内部调用) ---
		GetOAUserByUsername(ctx context.Context, in *GetOAUserByUsernameReq, opts ...grpc.CallOption) (*OAUserInfo, error)
		VerifyOAPassword(ctx context.Context, in *VerifyOAPasswordReq, opts ...grpc.CallOption) (*VerifyOAPasswordResp, error)
		// --- 用户管理 ---
		GetOAUserList(ctx context.Context, in *GetOAUserListReq, opts ...grpc.CallOption) (*GetOAUserListResp, error)
		GetOAUserDetail(ctx context.Context, in *GetOAUserByUsernameReq, opts ...grpc.CallOption) (*OAUserInfo, error)
		CreateOAUser(ctx context.Context, in *CreateOAUserReq, opts ...grpc.CallOption) (*OAUserInfo, error)
		UpdateOAUser(ctx context.Context, in *UpdateOAUserReq, opts ...grpc.CallOption) (*OAUserInfo, error)
		DeleteOAUser(ctx context.Context, in *GetOAUserByUsernameReq, opts ...grpc.CallOption) (*OAUserInfo, error)
	}

	defaultOAUser struct {
		cli zrpc.Client
	}
)

func NewOAUser(cli zrpc.Client) OAUser {
	return &defaultOAUser{
		cli: cli,
	}
}

// --- 认证(内部调用) ---
func (m *defaultOAUser) GetOAUserByUsername(ctx context.Context, in *GetOAUserByUsernameReq, opts ...grpc.CallOption) (*OAUserInfo, error) {
	client := oauser.NewOAUserClient(m.cli.Conn())
	return client.GetOAUserByUsername(ctx, in, opts...)
}

func (m *defaultOAUser) VerifyOAPassword(ctx context.Context, in *VerifyOAPasswordReq, opts ...grpc.CallOption) (*VerifyOAPasswordResp, error) {
	client := oauser.NewOAUserClient(m.cli.Conn())
	return client.VerifyOAPassword(ctx, in, opts...)
}

// --- 用户管理 ---
func (m *defaultOAUser) GetOAUserList(ctx context.Context, in *GetOAUserListReq, opts ...grpc.CallOption) (*GetOAUserListResp, error) {
	client := oauser.NewOAUserClient(m.cli.Conn())
	return client.GetOAUserList(ctx, in, opts...)
}

func (m *defaultOAUser) GetOAUserDetail(ctx context.Context, in *GetOAUserByUsernameReq, opts ...grpc.CallOption) (*OAUserInfo, error) {
	client := oauser.NewOAUserClient(m.cli.Conn())
	return client.GetOAUserDetail(ctx, in, opts...)
}

func (m *defaultOAUser) CreateOAUser(ctx context.Context, in *CreateOAUserReq, opts ...grpc.CallOption) (*OAUserInfo, error) {
	client := oauser.NewOAUserClient(m.cli.Conn())
	return client.CreateOAUser(ctx, in, opts...)
}

func (m *defaultOAUser) UpdateOAUser(ctx context.Context, in *UpdateOAUserReq, opts ...grpc.CallOption) (*OAUserInfo, error) {
	client := oauser.NewOAUserClient(m.cli.Conn())
	return client.UpdateOAUser(ctx, in, opts...)
}

func (m *defaultOAUser) DeleteOAUser(ctx context.Context, in *GetOAUserByUsernameReq, opts ...grpc.CallOption) (*OAUserInfo, error) {
	client := oauser.NewOAUserClient(m.cli.Conn())
	return client.DeleteOAUser(ctx, in, opts...)
}
