// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: oauser-rpc.proto

package server

import (
	"context"

	"rpc/internal/logic"
	"rpc/internal/svc"
	"rpc/oauser"
)

type OAUserServer struct {
	svcCtx *svc.ServiceContext
	oauser.UnimplementedOAUserServer
}

func NewOAUserServer(svcCtx *svc.ServiceContext) *OAUserServer {
	return &OAUserServer{
		svcCtx: svcCtx,
	}
}

// --- 认证(内部调用) ---
func (s *OAUserServer) GetOAUserByUsername(ctx context.Context, in *oauser.GetOAUserByUsernameReq) (*oauser.OAUserInfo, error) {
	l := logic.NewGetOAUserByUsernameLogic(ctx, s.svcCtx)
	return l.GetOAUserByUsername(in)
}

func (s *OAUserServer) VerifyOAPassword(ctx context.Context, in *oauser.VerifyOAPasswordReq) (*oauser.VerifyOAPasswordResp, error) {
	l := logic.NewVerifyOAPasswordLogic(ctx, s.svcCtx)
	return l.VerifyOAPassword(in)
}

// --- 用户管理 ---
func (s *OAUserServer) GetOAUserList(ctx context.Context, in *oauser.GetOAUserListReq) (*oauser.GetOAUserListResp, error) {
	l := logic.NewGetOAUserListLogic(ctx, s.svcCtx)
	return l.GetOAUserList(in)
}

func (s *OAUserServer) GetOAUserDetail(ctx context.Context, in *oauser.GetOAUserByUsernameReq) (*oauser.OAUserInfo, error) {
	l := logic.NewGetOAUserDetailLogic(ctx, s.svcCtx)
	return l.GetOAUserDetail(in)
}

func (s *OAUserServer) CreateOAUser(ctx context.Context, in *oauser.CreateOAUserReq) (*oauser.OAUserInfo, error) {
	l := logic.NewCreateOAUserLogic(ctx, s.svcCtx)
	return l.CreateOAUser(in)
}

func (s *OAUserServer) UpdateOAUser(ctx context.Context, in *oauser.UpdateOAUserReq) (*oauser.OAUserInfo, error) {
	l := logic.NewUpdateOAUserLogic(ctx, s.svcCtx)
	return l.UpdateOAUser(in)
}

func (s *OAUserServer) DeleteOAUser(ctx context.Context, in *oauser.GetOAUserByUsernameReq) (*oauser.OAUserInfo, error) {
	l := logic.NewDeleteOAUserLogic(ctx, s.svcCtx)
	return l.DeleteOAUser(in)
}
