// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: oauser-rpc.proto

package server

import (
	"context"

	"rpc/internal/logic"
	"rpc/internal/svc"
	"rpc/oauser"
)

type OaUserServer struct {
	svcCtx *svc.ServiceContext
	oauser.UnimplementedOaUserServer
}

func NewOaUserServer(svcCtx *svc.ServiceContext) *OaUserServer {
	return &OaUserServer{
		svcCtx: svcCtx,
	}
}

// 用户信息管理
func (s *OaUserServer) GetUserByPhone(ctx context.Context, in *oauser.GetUserInfoReq) (*oauser.GetUserInfoResp, error) {
	l := logic.NewGetUserByPhoneLogic(ctx, s.svcCtx)
	return l.GetUserByPhone(in)
}

func (s *OaUserServer) UpdateUserInfo(ctx context.Context, in *oauser.UpdateUserInfoReq) (*oauser.UpdateUserInfoResp, error) {
	l := logic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

func (s *OaUserServer) UpdateUserStatus(ctx context.Context, in *oauser.UpdateUserStatusReq) (*oauser.UpdateUserStatusResp, error) {
	l := logic.NewUpdateUserStatusLogic(ctx, s.svcCtx)
	return l.UpdateUserStatus(in)
}

func (s *OaUserServer) DeleteUser(ctx context.Context, in *oauser.DeleteUserReq) (*oauser.DeleteUserResp, error) {
	l := logic.NewDeleteUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(in)
}

// 用户认证管理
func (s *OaUserServer) Login(ctx context.Context, in *oauser.LoginReq) (*oauser.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *OaUserServer) Register(ctx context.Context, in *oauser.RegisterReq) (*oauser.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *OaUserServer) Logout(ctx context.Context, in *oauser.LogoutReq) (*oauser.LogoutResp, error) {
	l := logic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

func (s *OaUserServer) ChangePassword(ctx context.Context, in *oauser.ChangePasswordReq) (*oauser.ChangePasswordResp, error) {
	l := logic.NewChangePasswordLogic(ctx, s.svcCtx)
	return l.ChangePassword(in)
}
