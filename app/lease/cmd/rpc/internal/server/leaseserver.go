// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: lease-rpc.proto

package server

import (
	"context"

	"rpc/internal/logic"
	"rpc/internal/svc"
	"rpc/lease"
)

type LeaseServer struct {
	svcCtx *svc.ServiceContext
	lease.UnimplementedLeaseServer
}

func NewLeaseServer(svcCtx *svc.ServiceContext) *LeaseServer {
	return &LeaseServer{
		svcCtx: svcCtx,
	}
}

// 租赁申请管理
func (s *LeaseServer) CreateLeaseApplication(ctx context.Context, in *lease.CreateLeaseApplicationReq) (*lease.CreateLeaseApplicationResp, error) {
	l := logic.NewCreateLeaseApplicationLogic(ctx, s.svcCtx)
	return l.CreateLeaseApplication(in)
}

func (s *LeaseServer) GetLeaseApplication(ctx context.Context, in *lease.GetLeaseApplicationReq) (*lease.GetLeaseApplicationResp, error) {
	l := logic.NewGetLeaseApplicationLogic(ctx, s.svcCtx)
	return l.GetLeaseApplication(in)
}

func (s *LeaseServer) ListLeaseApplications(ctx context.Context, in *lease.ListLeaseApplicationsReq) (*lease.ListLeaseApplicationsResp, error) {
	l := logic.NewListLeaseApplicationsLogic(ctx, s.svcCtx)
	return l.ListLeaseApplications(in)
}

func (s *LeaseServer) UpdateLeaseApplication(ctx context.Context, in *lease.UpdateLeaseApplicationReq) (*lease.UpdateLeaseApplicationResp, error) {
	l := logic.NewUpdateLeaseApplicationLogic(ctx, s.svcCtx)
	return l.UpdateLeaseApplication(in)
}

func (s *LeaseServer) CancelLeaseApplication(ctx context.Context, in *lease.CancelLeaseApplicationReq) (*lease.CancelLeaseApplicationResp, error) {
	l := logic.NewCancelLeaseApplicationLogic(ctx, s.svcCtx)
	return l.CancelLeaseApplication(in)
}

// 租赁审批管理
func (s *LeaseServer) ApproveLeaseApplication(ctx context.Context, in *lease.ApproveLeaseApplicationReq) (*lease.ApproveLeaseApplicationResp, error) {
	l := logic.NewApproveLeaseApplicationLogic(ctx, s.svcCtx)
	return l.ApproveLeaseApplication(in)
}

func (s *LeaseServer) ListLeaseApprovals(ctx context.Context, in *lease.ListLeaseApprovalsReq) (*lease.ListLeaseApprovalsResp, error) {
	l := logic.NewListLeaseApprovalsLogic(ctx, s.svcCtx)
	return l.ListLeaseApprovals(in)
}
