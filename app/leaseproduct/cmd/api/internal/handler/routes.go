// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package handler

import (
	"net/http"

	admin "api/internal/handler/admin"
	product "api/internal/handler/product"
	"api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AdminAuth},
			[]rest.Route{
				{
					// 获取所有租赁产品列表
					Method:  http.MethodGet,
					Path:    "/products",
					Handler: admin.ListAllLeaseProductsHandler(serverCtx),
				},
				{
					// 创建租赁产品
					Method:  http.MethodPost,
					Path:    "/products",
					Handler: admin.CreateLeaseProductHandler(serverCtx),
				},
				{
					// 获取租赁产品详情
					Method:  http.MethodGet,
					Path:    "/products/:productCode",
					Handler: admin.GetLeaseProductDetailHandler(serverCtx),
				},
				{
					// 更新租赁产品
					Method:  http.MethodPut,
					Path:    "/products/:productCode",
					Handler: admin.UpdateLeaseProductHandler(serverCtx),
				},
				{
					// 删除租赁产品
					Method:  http.MethodDelete,
					Path:    "/products/:productCode",
					Handler: admin.DeleteLeaseProductHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/admin/leaseproduct"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取租赁产品列表
				Method:  http.MethodGet,
				Path:    "/products",
				Handler: product.ListLeaseProductsHandler(serverCtx),
			},
			{
				// 获取租赁产品详情
				Method:  http.MethodGet,
				Path:    "/products/:productCode",
				Handler: product.GetLeaseProductHandler(serverCtx),
			},
			{
				// 检查库存可用性
				Method:  http.MethodPost,
				Path:    "/products/check-inventory",
				Handler: product.CheckInventoryAvailabilityHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/leaseproduct"),
	)
}
