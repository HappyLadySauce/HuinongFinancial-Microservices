syntax = "v1"

info (
	title:   "租赁产品API"
	desc:    "提供租赁产品查询和管理功能"
	author:  "Huinong"
	email:   "dev@huinong.com"
	version: "v1.0.0"
)

// ========== 基础数据结构 ==========
type (
	// 租赁产品信息
	LeaseProduct {
		Id             int64   `json:"id"`
		ProductCode    string  `json:"product_code"`
		Name           string  `json:"name"`
		Type           string  `json:"type"`
		Machinery      string  `json:"machinery"`
		Brand          string  `json:"brand"`
		Model          string  `json:"model"`
		DailyRate      float64 `json:"daily_rate"`
		Deposit        float64 `json:"deposit"`
		MaxDuration    int64   `json:"max_duration"`
		MinDuration    int64   `json:"min_duration"`
		Description    string  `json:"description"`
		InventoryCount int64   `json:"inventory_count"`
		AvailableCount int64   `json:"available_count"`
		Status         int64   `json:"status"`
		CreatedAt      int64   `json:"created_at"`
		UpdatedAt      int64   `json:"updated_at"`
	}
)

// ========== 请求结构 ==========
type (
	// 查询产品列表
	ListLeaseProductsReq {
		Page    int64  `form:"page,default=1"`
		Size    int64  `form:"size,default=10"`
		Type    string `form:"type,optional"`
		Brand   string `form:"brand,optional"`
		Status  int32  `form:"status,optional"`
		Keyword string `form:"keyword,optional"`
	}

	ListLeaseProductsResp {
		List  []LeaseProduct `json:"list"`
		Total int64          `json:"total"`
	}

	// 创建租赁产品
	CreateLeaseProductReq {
		ProductCode    string  `json:"product_code"`
		Name           string  `json:"name"`
		Type           string  `json:"type"`
		Machinery      string  `json:"machinery"`
		Brand          string  `json:"brand"`
		Model          string  `json:"model"`
		DailyRate      float64 `json:"daily_rate"`
		Deposit        float64 `json:"deposit"`
		MaxDuration    int32   `json:"max_duration"`
		MinDuration    int32   `json:"min_duration"`
		Description    string  `json:"description"`
		InventoryCount int32   `json:"inventory_count"`
	}

	// 更新租赁产品
	UpdateLeaseProductReq {
		ProductCode string  `path:"productCode"`
		Name        string  `json:"name"`
		Type        string  `json:"type"`
		Machinery   string  `json:"machinery"`
		Brand       string  `json:"brand"`
		Model       string  `json:"model"`
		DailyRate   float64 `json:"daily_rate"`
		Deposit     float64 `json:"deposit"`
		MaxDuration int32   `json:"max_duration"`
		MinDuration int32   `json:"min_duration"`
		Description string  `json:"description"`
		Status      int32   `json:"status"`
	}

	// 检查库存可用性
	CheckInventoryReq {
		ProductCode string `json:"product_code"`
		Quantity    int32  `json:"quantity"`
		StartDate   string `json:"start_date"`
		EndDate     string `json:"end_date"`
	}

	CheckInventoryResp {
		Available      bool  `json:"available"`
		AvailableCount int32 `json:"available_count"`
	}
)

// ========== C端用户API (公开接口) ==========
@server (
	group:  product
	prefix: /api/v1/leaseproduct
)
service leaseproduct {
	@doc "获取租赁产品列表"
	@handler ListLeaseProducts
	get /products (ListLeaseProductsReq) returns (ListLeaseProductsResp)

	@doc "获取租赁产品详情"
	@handler GetLeaseProduct
	get /products/:productCode returns (LeaseProduct)

	@doc "检查库存可用性"
	@handler CheckInventoryAvailability
	post /products/check-inventory (CheckInventoryReq) returns (CheckInventoryResp)
}

// ========== B端管理API (需要管理员权限) ==========
@server (
	jwt:        Auth
	middleware: AdminAuth
	group:      admin
	prefix:     /api/v1/admin/leaseproduct
)
service leaseproduct {
	@doc "获取所有租赁产品列表"
	@handler ListAllLeaseProducts
	get /products (ListLeaseProductsReq) returns (ListLeaseProductsResp)

	@doc "获取租赁产品详情"
	@handler GetLeaseProductDetail
	get /products/:productCode returns (LeaseProduct)

	@doc "创建租赁产品"
	@handler CreateLeaseProduct
	post /products (CreateLeaseProductReq) returns (LeaseProduct)

	@doc "更新租赁产品"
	@handler UpdateLeaseProduct
	put /products/:productCode (UpdateLeaseProductReq) returns (LeaseProduct)

	@doc "删除租赁产品"
	@handler DeleteLeaseProduct
	delete /products/:productCode
}

// goctl api go -api *.api -dir ../  -style=goZero

